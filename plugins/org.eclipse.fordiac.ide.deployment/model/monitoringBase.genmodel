<?xml version="1.0" encoding="UTF-8"?>
<genmodel:GenModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore"
    xmlns:genmodel="http://www.eclipse.org/emf/2002/GenModel" copyrightText="******************************************************************************&#xA;* Copyright (c) 2012, 2013, 2015 - 2017 Profactor GmbH, fortiss GmbH&#xA;* &#xA;* This program and the accompanying materials are made available under the&#xA;* terms of the Eclipse Public License 2.0 which is available at&#xA;* http://www.eclipse.org/legal/epl-2.0.&#xA;*&#xA;* SPDX-License-Identifier: EPL-2.0&#xA;*&#xA;* Contributors:&#xA;*   Gerhard Ebenhofer, Alois Zoitl, Gerd Kainz&#xA;*      - initial API and implementation and/or initial documentation&#xA;******************************************************************************&#xA;"
    modelDirectory="/org.eclipse.fordiac.ide.deployment/src-gen" editDirectory="/org.eclipse.fordiac.ide.deployment.edit/src-gen"
    editorDirectory="/org.eclipse.fordiac.ide.deployment.editor/src-gen" modelPluginID="org.eclipse.fordiac.ide.deployment"
    modelName="monitoringBase" nonNLSMarkers="true" importerID="org.eclipse.emf.importer.ecore"
    complianceLevel="21.0" copyrightFields="false" editPluginID="org.eclipse.fordiac.ide.deployment.edit"
    editorPluginID="org.eclipse.fordiac.ide.deployment.editor" usedGenPackages="platform:/plugin/org.eclipse.emf.ecore/model/Ecore.genmodel#//ecore ../../org.eclipse.fordiac.ide.model/model/fordiac.genmodel#//libraryElement ../../org.eclipse.fordiac.ide.model/model/fordiac.genmodel#//data"
    importOrganizing="true" cleanup="true">
  <foreignModel>monitoringBase.ecore</foreignModel>
  <genPackages prefix="MonitoringBase" basePackage="org.eclipse.fordiac.ide.deployment"
      disposableProviderFactory="true" ecorePackage="monitoringBase.ecore#/">
    <genClasses image="false" ecoreClass="monitoringBase.ecore#//MonitoringBaseElement">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference monitoringBase.ecore#//MonitoringBaseElement/port"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute monitoringBase.ecore#//MonitoringBaseElement/offline"/>
      <genOperations ecoreOperation="monitoringBase.ecore#//MonitoringBaseElement/getPortString"
          body="StringBuilder portString = new StringBuilder();&#xA;&#xA;portString.append(getPort().getHierarchy());&#xA;&#xA;&#xA;if (getPort().getInterfaceElement().eContainer() != null &amp;&amp; getPort().getInterfaceElement().eContainer().eContainer() instanceof AdapterFB) {&#xA;&#x9;portString.append(((PortElementImpl) getPort().eContainer()).getInterfaceElement().getName());&#xA;&#x9;portString.append(&quot;.&quot;); //$NON-NLS-1$&#xA;}&#xA;portString.append(getPort().getInterfaceElement().getName());&#xA;&#xA;return portString.toString();&#xA;"/>
      <genOperations ecoreOperation="monitoringBase.ecore#//MonitoringBaseElement/getResourceString"
          body="return getPort().getResource().getName();"/>
      <genOperations ecoreOperation="monitoringBase.ecore#//MonitoringBaseElement/getFBString"
          body="return getPort().getFb().getName();"/>
      <genOperations ecoreOperation="monitoringBase.ecore#//MonitoringBaseElement/getQualifiedString"
          body="&#x9;&#x9;return getPortString();"/>
    </genClasses>
    <genClasses ecoreClass="monitoringBase.ecore#//PortElement">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference monitoringBase.ecore#//PortElement/fb"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference monitoringBase.ecore#//PortElement/interfaceElement"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference monitoringBase.ecore#//PortElement/resource"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute monitoringBase.ecore#//PortElement/hierarchy"/>
      <genOperations ecoreOperation="monitoringBase.ecore#//PortElement/getPortString"
          body="StringBuilder portString = new StringBuilder(getResource().getDevice().getName());&#xA;&#xA;portString.append(&quot;.&quot;); //$NON-NLS-1$&#xA;portString.append(resource.getName());&#xA;portString.append(&quot;.&quot;); //$NON-NLS-1$&#xA;&#xA;portString.append(getHierarchy());&#xA;&#xA;if (interfaceElement.eContainer() != null &amp;&amp; interfaceElement.eContainer().eContainer() instanceof AdapterFB) {&#xA;&#x9;portString.append(((PortElementImpl) eContainer()).interfaceElement.getName());&#xA;&#x9;portString.append(&quot;.&quot;); //$NON-NLS-1$&#xA;}&#xA;portString.append(interfaceElement.getName());&#xA;&#xA;return portString.toString();&#xA;"/>
      <genOperations ecoreOperation="monitoringBase.ecore#//PortElement/getDevice"
          body="&#x9;&#x9;return getResource().getDevice();"/>
      <genOperations ecoreOperation="monitoringBase.ecore#//PortElement/getSystem"
          body="&#x9;&#x9;return getResource().getAutomationSystem();"/>
    </genClasses>
    <genClasses image="false" ecoreClass="monitoringBase.ecore#//IEditPartCreator"/>
  </genPackages>
</genmodel:GenModel>
